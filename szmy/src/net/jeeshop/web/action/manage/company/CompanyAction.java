package net.jeeshop.web.action.manage.company;import net.jeeshop.core.BaseAction;import net.jeeshop.core.KeyValueHelper;import net.jeeshop.core.ManageContainer;import net.jeeshop.core.MyCommonDao;import net.jeeshop.core.front.SystemManager;import net.jeeshop.core.system.bean.User;import net.jeeshop.core.util.CommonPropertiesUtil;import net.jeeshop.core.util.SendSMSUtil;import net.jeeshop.services.front.area.bean.Area;import net.jeeshop.services.manage.company.CompanyService;import net.jeeshop.services.manage.company.bean.Company;import net.jeeshop.services.manage.system.impl.UserService;import org.apache.commons.lang.StringUtils;public class CompanyAction extends BaseAction<Company> {	private static final long serialVersionUID = 1L;	private CompanyService companyService;	private UserService userService;	private MyCommonDao myCommonDao;	public void setCompanyService(CompanyService companyService) {		this.companyService = companyService;	}	public void setMyCommonDao(MyCommonDao myCommonDao) {		this.myCommonDao = myCommonDao;	}	// 分页查询商品	@Override	public String selectList() throws Exception {		try {			User user = (User) getRequest().getSession().getAttribute(					ManageContainer.manage_session_user_info);			if (user == null) {				throw new NullPointerException("登陆超时！");			}			if (user.getRid().equals("2")) {				e.setCreateAccount(user.getUsername());			}			super.selectList();			return toList;		} catch (Exception e) {			e.printStackTrace();			throw e;		}	}			public void setUserService(UserService userService) {		this.userService = userService;	}	@Override	protected void selectListAfter() {		pager.setPagerUrl("company!selectList.action");	}	@Override	public String update() throws Exception {				String sql = "update t_product set compName='"+e.getName()+"' ";		if(StringUtils.isNotBlank(e.getType())){			sql += "  ,companyType='"+e.getType()+"'";		}		String end = " where compID="+e.getId();		myCommonDao.executeSql(2, sql+end);		StringBuilder pcadetail = new StringBuilder();		Area sheng = SystemManager.areaMap.get(e.getProvince());//省		if(sheng!=null){			pcadetail.append(sheng.getName());			for(int i=0;i<sheng.getChildren().size();i++){				Area shi = sheng.getChildren().get(i);//市				if(shi.getCode().equals(e.getCity())){					pcadetail.append(" ").append(shi.getName());					for(int j = 0;j<shi.getChildren().size();j++){						Area qu = shi.getChildren().get(j);//区						if(qu.getCode().equals(e.getArea())){							pcadetail.append(" ").append(qu.getName());							break;						}					}					break;				}			}		}		e.setPcadetail(pcadetail.toString());		super.update();		e=new Company();		return selectList();	}	@Override	public String toEdit() throws Exception {		// TODO Auto-generated method stub		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}				if(user.getRid().equals("1")||user.getRid().equals(KeyValueHelper.get("checkProductRid"))){			getRequest().setAttribute("r", 1);		}else{			getRequest().setAttribute("r", 0);		}		super.toEdit();		//获取区域列表		if(StringUtils.isNotBlank(e.getArea())){//			address.getArea()			Area area = SystemManager.areaMap.get(e.getProvince());			if(area!=null && area.getChildren()!=null && area.getChildren().size()>0){				for(int i=0;i<area.getChildren().size();i++){					Area city = area.getChildren().get(i);					if(city.getCode().equals(e.getCity())){												e.setAreaList(city.getChildren());						break;					}				}			}		}						return toEdit;	}	public String updateType() throws Exception {		if(e.getId()==null || e.getId().equals("") ){		}else{		String type = e.getType();		toEdit();		e.setType(type);		}		return toEdit;	}	@Override	public Company getE() {		return this.e;	}	@Override	public void prepare() throws Exception {		if (this.e == null) {			this.e = new Company();		}	}	@Override	public void insertAfter(Company e) {		e.clear();	}	/**	 * 添加	 */	@Override	public String insert() throws Exception {		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}				if(user.getRid().equals("1")||user.getRid().equals(KeyValueHelper.get("checkProductRid"))){			e.setStatus("2");		}else{			e.setStatus("1");		}		StringBuilder pcadetail = new StringBuilder();		Area sheng = SystemManager.areaMap.get(e.getProvince());//省		pcadetail.append(sheng.getName());		for(int i=0;i<sheng.getChildren().size();i++){			Area shi = sheng.getChildren().get(i);//市			if(shi.getCode().equals(e.getCity())){				pcadetail.append(" ").append(shi.getName());				for(int j = 0;j<shi.getChildren().size();j++){					Area qu = shi.getChildren().get(j);//区					if(qu.getCode().equals(e.getArea())){						pcadetail.append(" ").append(qu.getName());						break;					}				}				break;			}		}		e.setPcadetail(pcadetail.toString());				//getE().setCreateAccount(user.getUsername());		int companyID = getServer().insert(getE());		getSession().setAttribute(ManageContainer.manage_session_company_info, e);		e.clear();		e.setId(String.valueOf(companyID));		getSession().setAttribute("insertOrUpdateMsg", "添加企业成功！");		e=new Company();		super.selectList();		return toList;	}	/**	 * 企业审核	 * @author hn	 * @date 2015-11-26 下午01:10:03 	 * @Description:	 */	public String check() throws Exception {		User user = (User)getSession().getAttribute(ManageContainer.manage_session_user_info);		String checkRid = (String)getSession().getAttribute("checkProductRid");		if(!user.getRid().equals(checkRid) && !user.getRid().equals("1")){			throw new RuntimeException("您权限不足,不能进行审核!");		}				String status=e.getStatus();		getServer().update(e);		getRequest().setAttribute("message", "已审核为"+(status.equals("2")?"通过！":"不通过！"));								e = getServer().selectById(e.getId());		if(StringUtils.isNotBlank(e.getArea())){//			address.getArea()			Area area = SystemManager.areaMap.get(e.getProvince());			if(area!=null && area.getChildren()!=null && area.getChildren().size()>0){				for(int i=0;i<area.getChildren().size();i++){					Area city = area.getChildren().get(i);					if(city.getCode().equals(e.getCity())){												e.setAreaList(city.getChildren());						break;					}				}			}		}		User u=new User();		u.setUsername(e.getCreateAccount());		User u2 = userService.selectOne(u);				if(status.equals("2")){			String msg = CommonPropertiesUtil.getSMStemValue("check_comp_tg");						u=new User();			u.setId(u2.getId());			u.setRid("2");			userService.update(u);									SendSMSUtil.sendSMS(msg,u2.getMobile() );		}else if(status.equals("3")){			String msg = CommonPropertiesUtil.getSMStemValue("check_comp_btg");			msg=msg.replace("reason", e.getReason());			SendSMSUtil.sendSMS(msg,u2.getMobile() );			getServer().delete(e);			e=new Company();			return selectList();		}		return toEdit;	}	@Override	public String deletes() throws Exception {		// TODO Auto-generated method stub		return super.deletes();	}	private String getEditUrl(String id) {		return "company!.action?e.id=" + id;	}	}