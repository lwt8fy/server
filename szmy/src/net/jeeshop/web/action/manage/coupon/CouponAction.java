package net.jeeshop.web.action.manage.coupon;import java.util.List;import net.jeeshop.core.BaseAction;import net.jeeshop.core.ManageContainer;import net.jeeshop.core.system.bean.User;import net.jeeshop.core.util.TokenUtil;import net.jeeshop.services.manage.coupon.bean.Coupon;import net.jeeshop.services.manage.account.AccountService;import net.jeeshop.services.manage.account.bean.Account;import net.jeeshop.services.manage.company.CompanyService;import net.jeeshop.services.manage.company.bean.Company;import net.jeeshop.services.manage.coupon.CouponService;public class CouponAction extends BaseAction<Coupon> {	private static final long serialVersionUID = 1L;	private CouponService couponService;	private CompanyService companyService;	private AccountService accountService;	private String message;	private int isy=0;		private Coupon con;			@Override	public String insert() throws Exception{		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}				Coupon cou=new Coupon();		cou.setOwnerID(user.getId());		cou.setParentID("0");		cou.setStatus("in");//1和2		List<Coupon> list2 = couponService.selectList(cou);		if(list2!=null&&list2.size()>0){			throw new NullPointerException("已申请过优惠券,不可重复申请！");		}						Company comp=new Company();		comp.setCreateAccount(user.getUsername());		List<Company> list = companyService.selectList(comp);		if (user == null||list.size()==0) {			throw new NullPointerException("还未添加公司！");		}		e.setOrientationType(net.jeeshop.services.common.Coupon.orientationType_comp);		e.setOrientationID(list.get(0).getId());		e.setOrientationName(list.get(0).getName());		e.setOwnerID(user.getId());		e.setOwnerName(user.getUsername());		e.setOwnerType(net.jeeshop.services.common.Coupon.ownerType_comp);		e.setRemaining(e.getAmount());		e.setRecycle(0.00);		e.setStatus(net.jeeshop.services.common.Coupon.status_init);		e.setParentID("0");				couponService.insert(e);		message="已向平台发送申请,请等待审核!";		return selectList();	}	/**	 * 	 * @author 滕武超	 * @date 2015-10-26 下午05:23:27 	 * @Description:分配购物券	 */	public String insert2() throws Exception{		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}				String id = getRequest().getParameter("id");		Coupon cou = couponService.selectById(id);		e.setOrientationID(cou.getOrientationID());		e.setOrientationType(cou.getOrientationType());		e.setOrientationName(cou.getOrientationName());								e.setOwnerID(user.getId());		e.setOwnerName(user.getUsername());		e.setOwnerType(net.jeeshop.services.common.Coupon.ownerType_comp);		e.setRemaining(e.getAmount());		e.setRecycle(0.00);		e.setStatus(net.jeeshop.services.common.Coupon.status_y);		e.setParentID(id);		if(e.getEndTime()!=null&&!e.getEndTime().equals("")){		e.setEndTime(e.getEndTime()+" 23:59:59");		}				couponService.insert(e);		Coupon c2=new Coupon();		c2.setId(cou.getId());		c2.setRemaining(cou.getRemaining()-e.getAmount());		cou.setRemaining(c2.getRemaining());		if(c2.getRemaining()==0){			c2.setStatus(net.jeeshop.services.common.Coupon.status_n);			cou.setStatus(net.jeeshop.services.common.Coupon.status_n);		}		couponService.update(c2);				e=new Coupon();		e.setOwnerID(user.getId());		e.setParentID(id);//查询属于公司的非0的二级购物券(由pid为0 的购物券分化出的)		e.setOwnerType(net.jeeshop.services.common.Coupon.ownerType_comp);		super.selectList();		isy=1;		e=cou;		message="添加成功!";		return "toEdit";	}	/**	 * 	 * @author 滕武超	 * @throws Exception 	 * @date 2015-10-28 下午01:08:15 	 * @Description:回收二级购物券	 */	public String recycle() throws Exception{		Coupon c = couponService.selectById(e.getId());		e=new Coupon();		e.setId(c.getId());		e.setRecycle(c.getRemaining());		e.setRemaining(0.00);		e.setRemark("已回收");		e.setStatus(net.jeeshop.services.common.Coupon.status_n);		couponService.update(e);		Coupon pc = couponService.selectById(c.getParentID());		pc.setRemaining(pc.getRemaining()+c.getRemaining());		pc.setStatus(net.jeeshop.services.common.Coupon.status_y);		couponService.update(pc);				e=new Coupon();		e.setParentID(pc.getId());		super.selectList();		e=pc;		isy=0;		message="回收成功!";		return "toEdit";	}		// 分页查询	@Override	public String selectList(){			User user = (User) getRequest().getSession().getAttribute(					ManageContainer.manage_session_user_info);			if (user == null) {				throw new NullPointerException("登陆超时！");			}			e=new Coupon();			if (user.getRid().equals("2")) {				e.setOwnerID(user.getId());			}			e.setOwnerType(net.jeeshop.services.common.Coupon.ownerType_comp);			e.setParentID("0");			try {				super.selectList();			} catch (Exception e) {				// TODO Auto-generated catch block				e.printStackTrace();			}			return toList;	}		@Override	public String toAdd(){		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}				Coupon cou=new Coupon();		cou.setOwnerID(user.getId());		cou.setParentID("0");		cou.setStatus("in");//1和2		List<Coupon> list2 = couponService.selectList(cou);		if(list2!=null&&list2.size()>0){			message="您已申请过优惠券或还有未用完优惠券,禁止申请！";			return selectList();		}		return "toAdd";	}	public String updateStatus() throws Exception{		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}		String crid= (String)getSession().getAttribute("checkRid");		if(!user.getRid().equals(crid)){			throw new NullPointerException("权限不足！");		}		couponService.update(e);		message="操作成功！";		return toEdit2();	}	@Override	public String toEdit(){		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}		Coupon cou = couponService.selectById(e.getId());		if(cou==null){			throw new NullPointerException("参数错误！");		}		e.setParentID(e.getId());		e.setId(null);		try {			super.selectList();		} catch (Exception e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		for (Coupon c : (List<Coupon>)pager.getList()) {			if(c.getStatus().equals(net.jeeshop.services.common.Coupon.status_y)){				isy=1;			}		}		e=cou;		return "toEdit";	}	/**	 * 	 * @author 滕武超	 * @throws Exception 	 * @date 2015-10-26 下午05:07:59 	 * @Description:审核	 */	public String toEdit2() throws Exception{		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}		Coupon cou = couponService.selectById(e.getId());		if(cou==null){			throw new NullPointerException("参数错误！");		}		e=cou;		return "toEdit2";	}	public String grant(){		if(!TokenUtil.getInstance().isTokenValid(getRequest())){			throw new  NullPointerException("表单重复提交了！");		}		User user = (User) getRequest().getSession().getAttribute(				ManageContainer.manage_session_user_info);		if (user == null) {			throw new NullPointerException("登陆超时！");		}		Coupon cou = couponService.selectById(e.getId());		if(cou==null){			throw new NullPointerException("参数错误！");		}		Double d=cou.getRemaining()-e.getAmount();		Coupon c2=new Coupon();		c2.setId(cou.getId());		cou.setRemaining(d);		c2.setRemaining(d);		if(d==0){			cou.setStatus(net.jeeshop.services.common.Coupon.status_n);			c2.setStatus(net.jeeshop.services.common.Coupon.status_n);		}		if(d<0){			message="超出金额";			return toEdit();		}				Account ac=new Account();		ac.setCardNO(e.getOwnerNo());		ac = accountService.selectOne(ac);		if(ac==null||ac.getId()==null){			message="身份证号不可用";			return toEdit();		}		couponService.update(c2);		Coupon con2=new Coupon();		con2.setOrientationType(cou.getOrientationType());		con2.setOrientationID(cou.getOrientationID());		con2.setOrientationName(cou.getOrientationName());		con2.setOwnerID(ac.getId());		con2.setOwnerName(ac.getAccount());		con2.setOwnerType(net.jeeshop.services.common.Coupon.ownerType_user);		con2.setRemaining(e.getAmount());		con2.setRecycle(0.00);		con2.setStatus(net.jeeshop.services.common.Coupon.status_y);		con2.setParentID(e.getId());		con2.setAmount(e.getAmount());		con2.setOwnerNo(e.getOwnerNo());		couponService.insert(con2);		message="发放购物券成功!";		e.setParentID(e.getId());		e.setId(null);		try {			super.selectList();		} catch (Exception e) {			// TODO Auto-generated catch block			e.printStackTrace();		}				e=cou;		e.setOwnerNo(ac.getCardNO());		return "toEdit";	}							public void setCompanyService(CompanyService companyService) {		this.companyService = companyService;	}	public void setCouponService(CouponService couponService) {		this.couponService = couponService;	}	@Override	public Coupon getE() {		// TODO Auto-generated method stub		return this.e;	}			@Override	public void insertAfter(Coupon e) {		// TODO Auto-generated method stub			}	@Override	public void prepare() throws Exception {		if (this.e == null) {			this.e = new Coupon();		}	}	@Override	protected void selectListAfter() {		// TODO Auto-generated method stub			}	public String getMessage() {		return message;	}	public void setMessage(String message) {		this.message = message;	}	public Coupon getCon() {		return con;	}	public void setCon(Coupon con) {		this.con = con;	}	public void setAccountService(AccountService accountService) {		this.accountService = accountService;	}	public int getIsy() {		return isy;	}	public void setIsy(int isy) {		this.isy = isy;	}		}