package net.jeeshop.web.action.front.tuiGuang;import java.util.ArrayList;import java.util.List;import net.jeeshop.core.BaseAction;import net.jeeshop.core.MyCommonDao;import net.jeeshop.services.common.AppUser;import net.jeeshop.services.common.TuiGuang;import net.jeeshop.services.front.appUser.service.AppUserService;import net.jeeshop.services.manage.tuiGuang.service.TuiGuangService;import net.sf.json.JSONObject;/** * 手机客户端推广人员管理 * @author Administrator * */public class AppTuiGuangAction extends BaseAction<TuiGuang> {	private static final long serialVersionUID = 1L;	@SuppressWarnings("unused")	private TuiGuangService tuiGuangService;	private AppUserService appUserService;	private MyCommonDao myCommonDao;				private final String ERROR_MSG="{\"success\":\"0\"}";	private final String Exception_MSG="{\"success\":\"3\"}";		private String json;	private String uuid;	private String grade;//等级				public String getGrade() {		return grade;	}	public void setGrade(String grade) {		this.grade = grade;	}	public void setTuiGuangService(TuiGuangService tuiGuangService) {		this.tuiGuangService = tuiGuangService;	}		public void setMyCommonDao(MyCommonDao myCommonDao) {		this.myCommonDao = myCommonDao;	}	public String getJson() {		return json;	}	public void setJson(String json) {		this.json = json;	}	public String getUuid() {		return uuid;	}	public void setUuid(String uuid) {		this.uuid = uuid;	}	public void setAppUserService(AppUserService appUserService) {		this.appUserService = appUserService;	}	@Override	public String selectList() throws Exception {		// TODO Auto-generated method stub		int os=pager.getOffset();		pager.setOffset((os - 1) * e.getPageSize() );		try{			if(uuid==null||uuid.equals("")||grade==null){				json = ERROR_MSG;			}else{				AppUser u = appUserService.selectByUuid(uuid);				if(u==null){					json = ERROR_MSG;					}else{				String sql1="select userName from t_tuiguang where pName in (";				String sql2=")";				String pnames="'"+u.getUsername()+"'";				if(grade.equals("2")){				List<Object> list1 =myCommonDao.executeSql(1,sql1+pnames+sql2);				for (int i = 0; i < list1.size(); i++) {					if(i==0){						pnames="'"+list1.get(i).toString()+"'";					}else{						pnames+=","+"'"+list1.get(i).toString()+"'";					}				}				}				if(grade.equals("3")){					List<Object> list1 =myCommonDao.executeSql(1,sql1+pnames+sql2);					for (int i = 0; i < list1.size(); i++) {						if(i==0){							pnames="'"+list1.get(i).toString()+"'";						}else{							pnames+=","+"'"+list1.get(i).toString()+"'";						}					}					List<Object> list2 =new ArrayList<Object>();					if(list1!=null&&list1.size()>0){					list2 = myCommonDao.executeSql(1,sql1+pnames+sql2);						for (int i = 0; i < list2.size(); i++) {							if(i==0){								pnames="'"+list2.get(i).toString()+"'";							}else{								pnames+=","+"'"+list2.get(i).toString()+"'";							}						}					}else{						pnames=",,,,,,,";					}				}				//e.setUserName("艾米");				e.setIsJiLian("nnn");				e.setPnames(pnames);				e.setOrderBySql(" createTime desc ");				super.selectList();				pager.setOffset(os);				JSONObject jsonObject = JSONObject.fromObject(pager);				jsonObject.put("success", "1");				json=jsonObject.toString();			}			}		}catch (Exception e) {			e.printStackTrace();			json = Exception_MSG;		}		return "json";	}		public String getCount(){		try{			if(uuid==null||uuid.equals("")){				json = ERROR_MSG;			}else{				AppUser u = appUserService.selectByUuid(uuid);				if(u==null){					json = ERROR_MSG;					}else{				List<Object> list1 = myCommonDao.executeSql(1, "select userName from t_tuiguang where pName='"+u.getUsername()+"'");				String sql1="select userName from t_tuiguang where pName in (";				String sql2=")";				String pids="";				for (int i = 0; i < list1.size(); i++) {					if(i==0){						pids="'"+list1.get(i).toString()+"'";					}else{						pids+=","+"'"+list1.get(i).toString()+"'";					}				}				List<Object> list2 =new ArrayList<Object>();				if(list1!=null&&list1.size()>0){				list2 = myCommonDao.executeSql(1,sql1+pids+sql2);				}				for (int i = 0; i < list2.size(); i++) {					if(i==0){						pids="'"+list2.get(i).toString()+"'";					}else{						pids+=","+"'"+list2.get(i).toString()+"'";					}				}				List<Object> list3 =new ArrayList<Object>();				if(list2!=null&&list2.size()>0){				list3 = myCommonDao.executeSql(1,sql1+pids+sql2);				}								JSONObject jsonObject = new JSONObject();				jsonObject.put("all", list1.size()+list2.size()+list3.size());				jsonObject.put("count1", list1.size()); 				jsonObject.put("count2", list2.size());				jsonObject.put("count3", list3.size());				jsonObject.put("success", "1");				json=jsonObject.toString();			}			}		}catch (Exception e) {			e.printStackTrace();			json = Exception_MSG;		}		return "json";	}			@Override	protected void selectListAfter() {		pager.setPagerUrl("email!selectList.action");	}		@Override	public TuiGuang getE() {		return this.e;	}	@Override	public void prepare() throws Exception {		if (this.e == null) {			this.e = new TuiGuang();		}	}	@Override	public void insertAfter(TuiGuang e) {		e.clear();	}}